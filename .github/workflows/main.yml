name: Todo App CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  frontend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package.json

    - name: Install dependencies
      run: npm ci

    - name: Build frontend
      run: npm run build

    - name: Run Cypress tests
      uses: cypress-io/github-action@v5
      with:
        working-directory: ./frontend
        build: npm run build
        start: npm start
        wait-on: 'http://localhost:3000'
        record: false

    - name: Generate code coverage report
      run: npm test -- --coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        directory: ./frontend/coverage
        flags: frontend

  backend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package.json

    - name: Install dependencies
      run: npm ci

    - name: Run backend tests
      run: npm test
      env:
        MONGO_URI: mongodb://localhost:27017/todo-app-test
        JWT_SECRET: test-jwt-secret
        NODE_ENV: test

    - name: Install Newman
      run: npm install -g newman

    - name: Run API tests with Newman
      run: newman run tests/Todo_API.postman_collection.json --environment tests/local.postman_environment.json

    - name: Generate code coverage report
      run: npm test -- --coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        directory: ./backend/coverage
        flags: backend

  visual-tests:
    runs-on: ubuntu-latest
    needs: [frontend-tests]
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package.json

    - name: Install dependencies
      run: npm ci

    - name: Run visual tests
      run: npm run cypress:run -- --spec "cypress/e2e/visual-tests.cy.js"

    - name: Upload visual test artifacts
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: visual-test-snapshots
        path: frontend/cypress/snapshots